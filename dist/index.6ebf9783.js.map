{"mappings":"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","sources":["node_modules/process/browser.js","node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js"],"sourcesContent":["// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n"],"names":["$cfae44f0dfdf62c0$var$cachedSetTimeout","$cfae44f0dfdf62c0$var$cachedClearTimeout","$cfae44f0dfdf62c0$var$process","$cfae44f0dfdf62c0$exports","$cfae44f0dfdf62c0$var$defaultSetTimout","Error","$cfae44f0dfdf62c0$var$defaultClearTimeout","$cfae44f0dfdf62c0$var$runTimeout","fun","setTimeout","e","call","e1","this","clearTimeout","$cfae44f0dfdf62c0$var$currentQueue","$51861dfc7ca9d588$export$a143d493d941bafc","$eeb0961446aae8e3$export$d622b2ad8d90c771","$eeb0961446aae8e3$export$6100ba28696e12de","$cfae44f0dfdf62c0$var$queue","$cfae44f0dfdf62c0$var$draining","$cfae44f0dfdf62c0$var$queueIndex","$cfae44f0dfdf62c0$var$cleanUpNextTick","length","concat","$cfae44f0dfdf62c0$var$drainQueue","timeout","len","run","marker","$cfae44f0dfdf62c0$var$runClearTimeout","$cfae44f0dfdf62c0$var$Item","array","$cfae44f0dfdf62c0$var$noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","b64","tmp","lens","$eeb0961446aae8e3$var$getLens","validLen","placeHoldersLen","arr","$eeb0961446aae8e3$var$Arr","$eeb0961446aae8e3$var$_byteLength","curByte","$eeb0961446aae8e3$var$revLookup","charCodeAt","uint8","extraBytes","parts","maxChunkLength","len2","$eeb0961446aae8e3$var$encodeChunk","$eeb0961446aae8e3$var$lookup","join","$7221566bd4d49f44$export$aafa59e2e03f2942","$7221566bd4d49f44$export$68d8715fc104d294","Uint8Array","$eeb0961446aae8e3$var$code","$eeb0961446aae8e3$var$i","$eeb0961446aae8e3$var$len","indexOf","start","end","num","output","buffer","offset","isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","value","c","rt","abs","isNaN","floor","log","LN2","$51861dfc7ca9d588$var$customInspectSymbol","Symbol","$51861dfc7ca9d588$var$Buffer","$51861dfc7ca9d588$var$createBuffer","RangeError","buf","Object","setPrototypeOf","arg","encodingOrOffset","TypeError","$51861dfc7ca9d588$var$allocUnsafe","$51861dfc7ca9d588$var$from","string","encoding","isEncoding","$51861dfc7ca9d588$var$byteLength","actual","write","slice","$51861dfc7ca9d588$var$fromString","ArrayBuffer","isView","arrayView","$51861dfc7ca9d588$var$isInstance","copy","$51861dfc7ca9d588$var$fromArrayBuffer","byteOffset","byteLength","$51861dfc7ca9d588$var$fromArrayLike","$51861dfc7ca9d588$var$fromArrayView","SharedArrayBuffer","valueOf","from","b","obj","isBuffer","$51861dfc7ca9d588$var$checked","undefined","$51861dfc7ca9d588$var$numberIsNaN","type","isArray","data","$51861dfc7ca9d588$var$fromObject","toPrimitive","$51861dfc7ca9d588$var$assertSize","size","toString","mustMatch","loweredCase","$51861dfc7ca9d588$var$utf8ToBytes","$51861dfc7ca9d588$var$base64ToBytes","toLowerCase","$51861dfc7ca9d588$var$slowToString","$51861dfc7ca9d588$var$hexSlice","$51861dfc7ca9d588$var$utf8Slice","$51861dfc7ca9d588$var$asciiSlice","$51861dfc7ca9d588$var$latin1Slice","$51861dfc7ca9d588$var$base64Slice","$51861dfc7ca9d588$var$utf16leSlice","$51861dfc7ca9d588$var$swap","n","$51861dfc7ca9d588$var$bidirectionalIndexOf","val","$51861dfc7ca9d588$var$arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","$51861dfc7ca9d588$var$hexWrite","Number","remaining","strLen","parsed","parseInt","substr","$51861dfc7ca9d588$var$utf8Write","$51861dfc7ca9d588$var$blitBuffer","$51861dfc7ca9d588$var$asciiWrite","str","byteArray","$51861dfc7ca9d588$var$asciiToBytes","$51861dfc7ca9d588$var$base64Write","$51861dfc7ca9d588$var$ucs2Write","units","hi","lo","$51861dfc7ca9d588$var$utf16leToBytes","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","fromCharCode","$51861dfc7ca9d588$var$decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","$51861dfc7ca9d588$var$typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","alloc","fill","$51861dfc7ca9d588$var$alloc","allocUnsafe","allocUnsafeSlow","_isBuffer","compare","a","x","y","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","$51861dfc7ca9d588$var$hexSliceLookupTable","bytes","$51861dfc7ca9d588$var$checkOffset","ext","$51861dfc7ca9d588$var$checkInt","max","$51861dfc7ca9d588$var$wrtBigUInt64LE","$51861dfc7ca9d588$var$checkIntBI","BigInt","$51861dfc7ca9d588$var$wrtBigUInt64BE","$51861dfc7ca9d588$var$checkIEEE754","$51861dfc7ca9d588$var$writeFloat","littleEndian","noAssert","$51861dfc7ca9d588$var$writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","$51861dfc7ca9d588$var$defineBigIntMethod","$51861dfc7ca9d588$var$validateNumber","first","last","$51861dfc7ca9d588$var$boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","code","$51861dfc7ca9d588$var$errors","$51861dfc7ca9d588$var$E","sym","getMessage","Base","constructor","super","writable","configurable","stack","message","$51861dfc7ca9d588$var$addNumericalSeparator","range","ERR_OUT_OF_RANGE","$51861dfc7ca9d588$var$checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","$51861dfc7ca9d588$var$INVALID_BASE64_RE","leadSurrogate","split","$51861dfc7ca9d588$var$base64clean","src","dst","alphabet","table","i16","fn","$51861dfc7ca9d588$var$BufferBigIntNotDefined"],"version":3,"file":"index.6ebf9783.js.map"}